name: 'otvetoved-application-prod' 
services:
  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile.prod
    image: ${COMPOSE_REGISTRY_URI}/otbetoved-backend:production
    env_file:
      - backend/.env
    depends_on:
      - postgres
  frontend:
    build:
      context: ./frontend
    image: ${COMPOSE_REGISTRY_URI}/otvetoved-frontend:production
    env_file:
      - frontend/.env
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: npm run docker-dev
  nginx:
    build: ./nginx
    image: ${COMPOSE_REGISTRY_URI}/otvetoved-nginx:production
    env_file:
      - nginx/.env
    ports:
      - ${COMPOSE_NGINX_HTTP_HOST}:${COMPOSE_NGINX_HTTP_PORT}:80
      - ${COMPOSE_NGINX_HTTPS_HOST}:${COMPOSE_NGINX_HTTPS_PORT}:443
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx:/nginx
  postgres:
    image: postgres:16
    env_file:
      - postgres/.env
    ports:
      - ${COMPOSE_POSTGRES_EXPOSE_HOST}:${COMPOSE_POSTGRES_EXPOSE_PORT}:5432
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready
      interval: 5s
      timeout: 5s
      retries: 10
  registry:
    image: registry
    ports:
      - 127.0.0.1:5000:5000
volumes:
  database:
